services:
  db:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-family}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-family}
      POSTGRES_DB: ${POSTGRES_DB:-familyai}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-family}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - family_ai_net

  server:
    build:
      context: .
      dockerfile: ops/docker/Dockerfile.server
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://family:family@db:5432/familyai}
      VECTOR_BACKEND: ${VECTOR_BACKEND:-pgvector}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./sample_corpus:/app/sample_corpus:ro
      - chroma_data:/data/chroma
      - ./server/app:/app/app
    networks:
      - family_ai_net

  web:
    build:
      context: .
      dockerfile: ops/docker/Dockerfile.web
    restart: unless-stopped
    depends_on:
      - server
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-http://localhost/api}
    expose:
      - "3000"
    networks:
      - family_ai_net

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    depends_on:
      - web
      - server
    volumes:
      - ${NGINX_CONF_PATH:-./ops/nginx/nginx.conf}:/etc/nginx/nginx.conf:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - nginx_logs:/var/log/nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    networks:
      - family_ai_net

  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped
    depends_on:
      - nginx
    env_file:
      - .env
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ./ops/certbot:/opt/certbot:ro
    entrypoint: ["/bin/sh", "/opt/certbot/init_renew.sh"]
    networks:
      - family_ai_net

  backup:
    image: alpine:3.19
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./ops/backup:/opt/backup:ro
      - pg_backups:/backups
      - chroma_data:/data/chroma:ro
    entrypoint: ["/bin/sh", "-c", "apk add --no-cache postgresql15-client aws-cli && cp /opt/backup/crontab /etc/crontabs/root && crond -f -l 2"]
    networks:
      - family_ai_net

networks:
  family_ai_net:
    driver: bridge

volumes:
  pg_data:
  pg_backups:
  chroma_data:
  certbot_conf:
  certbot_www:
  nginx_logs:
